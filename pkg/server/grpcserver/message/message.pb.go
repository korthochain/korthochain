// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.15.5
// source: message.proto

package message

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ReqBalance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *ReqBalance) Reset() {
	*x = ReqBalance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqBalance) ProtoMessage() {}

func (x *ReqBalance) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqBalance.ProtoReflect.Descriptor instead.
func (*ReqBalance) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0}
}

func (x *ReqBalance) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type ResBalance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balance uint64 `protobuf:"varint,1,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (x *ResBalance) Reset() {
	*x = ResBalance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResBalance) ProtoMessage() {}

func (x *ResBalance) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResBalance.ProtoReflect.Descriptor instead.
func (*ResBalance) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1}
}

func (x *ResBalance) GetBalance() uint64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

type ReqTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From      string `protobuf:"bytes,1,opt,name=From,proto3" json:"From,omitempty"`
	To        string `protobuf:"bytes,2,opt,name=To,proto3" json:"To,omitempty"`
	Amount    uint64 `protobuf:"varint,3,opt,name=Amount,proto3" json:"Amount,omitempty"`
	Nonce     uint64 `protobuf:"varint,4,opt,name=Nonce,proto3" json:"Nonce,omitempty"`
	Sign      []byte `protobuf:"bytes,5,opt,name=Sign,proto3" json:"Sign,omitempty"`
	GasLimit  uint64 `protobuf:"varint,6,opt,name=GasLimit,proto3" json:"GasLimit,omitempty"`
	GasFeeCap uint64 `protobuf:"varint,7,opt,name=GasFeeCap,proto3" json:"GasFeeCap,omitempty"`
	GasPrice  uint64 `protobuf:"varint,8,opt,name=GasPrice,proto3" json:"GasPrice,omitempty"`
	Input     []byte `protobuf:"bytes,9,opt,name=Input,proto3" json:"Input,omitempty"`
}

func (x *ReqTransaction) Reset() {
	*x = ReqTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqTransaction) ProtoMessage() {}

func (x *ReqTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqTransaction.ProtoReflect.Descriptor instead.
func (*ReqTransaction) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{2}
}

func (x *ReqTransaction) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *ReqTransaction) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *ReqTransaction) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ReqTransaction) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *ReqTransaction) GetSign() []byte {
	if x != nil {
		return x.Sign
	}
	return nil
}

func (x *ReqTransaction) GetGasLimit() uint64 {
	if x != nil {
		return x.GasLimit
	}
	return 0
}

func (x *ReqTransaction) GetGasFeeCap() uint64 {
	if x != nil {
		return x.GasFeeCap
	}
	return 0
}

func (x *ReqTransaction) GetGasPrice() uint64 {
	if x != nil {
		return x.GasPrice
	}
	return 0
}

func (x *ReqTransaction) GetInput() []byte {
	if x != nil {
		return x.Input
	}
	return nil
}

type ResTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash string `protobuf:"bytes,1,opt,name=Hash,proto3" json:"Hash,omitempty"`
}

func (x *ResTransaction) Reset() {
	*x = ResTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResTransaction) ProtoMessage() {}

func (x *ResTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResTransaction.ProtoReflect.Descriptor instead.
func (*ResTransaction) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{3}
}

func (x *ResTransaction) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type ReqBlockByNumber struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height uint64 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *ReqBlockByNumber) Reset() {
	*x = ReqBlockByNumber{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqBlockByNumber) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqBlockByNumber) ProtoMessage() {}

func (x *ReqBlockByNumber) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqBlockByNumber.ProtoReflect.Descriptor instead.
func (*ReqBlockByNumber) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{4}
}

func (x *ReqBlockByNumber) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

type ReqBlockByHash struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *ReqBlockByHash) Reset() {
	*x = ReqBlockByHash{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqBlockByHash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqBlockByHash) ProtoMessage() {}

func (x *ReqBlockByHash) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqBlockByHash.ProtoReflect.Descriptor instead.
func (*ReqBlockByHash) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{5}
}

func (x *ReqBlockByHash) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type RespBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RespBlock) Reset() {
	*x = RespBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespBlock) ProtoMessage() {}

func (x *RespBlock) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespBlock.ProtoReflect.Descriptor instead.
func (*RespBlock) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6}
}

func (x *RespBlock) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RespBlock) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RespBlock) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type Tx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version   uint64 `protobuf:"varint,1,opt,name=Version,proto3" json:"Version,omitempty"`
	Type      uint64 `protobuf:"varint,2,opt,name=Type,proto3" json:"Type,omitempty"`
	Amount    uint64 `protobuf:"varint,3,opt,name=Amount,proto3" json:"Amount,omitempty"`
	From      string `protobuf:"bytes,4,opt,name=From,proto3" json:"From,omitempty"`
	To        string `protobuf:"bytes,5,opt,name=To,proto3" json:"To,omitempty"`
	GasPrice  uint64 `protobuf:"varint,6,opt,name=GasPrice,proto3" json:"GasPrice,omitempty"`
	GasFeeCap uint64 `protobuf:"varint,7,opt,name=GasFeeCap,proto3" json:"GasFeeCap,omitempty"`
	GasLimit  uint64 `protobuf:"varint,8,opt,name=GasLimit,proto3" json:"GasLimit,omitempty"`
	Input     []byte `protobuf:"bytes,9,opt,name=Input,proto3" json:"Input,omitempty"`
	Nonce     uint64 `protobuf:"varint,10,opt,name=Nonce,proto3" json:"Nonce,omitempty"`
}

func (x *Tx) Reset() {
	*x = Tx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tx) ProtoMessage() {}

func (x *Tx) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tx.ProtoReflect.Descriptor instead.
func (*Tx) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{7}
}

func (x *Tx) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Tx) GetType() uint64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Tx) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Tx) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *Tx) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *Tx) GetGasPrice() uint64 {
	if x != nil {
		return x.GasPrice
	}
	return 0
}

func (x *Tx) GetGasFeeCap() uint64 {
	if x != nil {
		return x.GasFeeCap
	}
	return 0
}

func (x *Tx) GetGasLimit() uint64 {
	if x != nil {
		return x.GasLimit
	}
	return 0
}

func (x *Tx) GetInput() []byte {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *Tx) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

type Block struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height        uint64 `protobuf:"varint,1,opt,name=Height,proto3" json:"Height,omitempty"`
	PrevBlockHash string `protobuf:"bytes,2,opt,name=PrevBlockHash,proto3" json:"PrevBlockHash,omitempty"`
	Hash          string `protobuf:"bytes,3,opt,name=Hash,proto3" json:"Hash,omitempty"`
	Version       uint64 `protobuf:"varint,4,opt,name=Version,proto3" json:"Version,omitempty"`
	Timestamp     string `protobuf:"bytes,5,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	Txs           []*Tx  `protobuf:"bytes,6,rep,name=Txs,proto3" json:"Txs,omitempty"`
	Root          string `protobuf:"bytes,7,opt,name=Root,proto3" json:"Root,omitempty"`
	Miner         string `protobuf:"bytes,8,opt,name=Miner,proto3" json:"Miner,omitempty"`
	Nonce         uint64 `protobuf:"varint,9,opt,name=Nonce,proto3" json:"Nonce,omitempty"`
	GasUsed       uint64 `protobuf:"varint,10,opt,name=GasUsed,proto3" json:"GasUsed,omitempty"`
	GasLimit      uint64 `protobuf:"varint,11,opt,name=GasLimit,proto3" json:"GasLimit,omitempty"`
}

func (x *Block) Reset() {
	*x = Block{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block) ProtoMessage() {}

func (x *Block) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block.ProtoReflect.Descriptor instead.
func (*Block) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8}
}

func (x *Block) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Block) GetPrevBlockHash() string {
	if x != nil {
		return x.PrevBlockHash
	}
	return ""
}

func (x *Block) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *Block) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Block) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *Block) GetTxs() []*Tx {
	if x != nil {
		return x.Txs
	}
	return nil
}

func (x *Block) GetRoot() string {
	if x != nil {
		return x.Root
	}
	return ""
}

func (x *Block) GetMiner() string {
	if x != nil {
		return x.Miner
	}
	return ""
}

func (x *Block) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *Block) GetGasUsed() uint64 {
	if x != nil {
		return x.GasUsed
	}
	return 0
}

func (x *Block) GetGasLimit() uint64 {
	if x != nil {
		return x.GasLimit
	}
	return 0
}

type RespBlockDate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Data    []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *RespBlockDate) Reset() {
	*x = RespBlockDate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespBlockDate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespBlockDate) ProtoMessage() {}

func (x *RespBlockDate) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespBlockDate.ProtoReflect.Descriptor instead.
func (*RespBlockDate) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{9}
}

func (x *RespBlockDate) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RespBlockDate) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *RespBlockDate) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ReqTxByHash struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *ReqTxByHash) Reset() {
	*x = ReqTxByHash{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqTxByHash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqTxByHash) ProtoMessage() {}

func (x *ReqTxByHash) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqTxByHash.ProtoReflect.Descriptor instead.
func (*ReqTxByHash) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{10}
}

func (x *ReqTxByHash) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type RespTxByHash struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Data    []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *RespTxByHash) Reset() {
	*x = RespTxByHash{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespTxByHash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespTxByHash) ProtoMessage() {}

func (x *RespTxByHash) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespTxByHash.ProtoReflect.Descriptor instead.
func (*RespTxByHash) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{11}
}

func (x *RespTxByHash) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RespTxByHash) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *RespTxByHash) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ResposeNonce struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce uint64 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (x *ResposeNonce) Reset() {
	*x = ResposeNonce{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResposeNonce) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResposeNonce) ProtoMessage() {}

func (x *ResposeNonce) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResposeNonce.ProtoReflect.Descriptor instead.
func (*ResposeNonce) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{12}
}

func (x *ResposeNonce) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

type ReqNonce struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *ReqNonce) Reset() {
	*x = ReqNonce{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqNonce) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqNonce) ProtoMessage() {}

func (x *ReqNonce) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqNonce.ProtoReflect.Descriptor instead.
func (*ReqNonce) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{13}
}

func (x *ReqNonce) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type ReqMaxBlockHeight struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReqMaxBlockHeight) Reset() {
	*x = ReqMaxBlockHeight{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqMaxBlockHeight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqMaxBlockHeight) ProtoMessage() {}

func (x *ReqMaxBlockHeight) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqMaxBlockHeight.ProtoReflect.Descriptor instead.
func (*ReqMaxBlockHeight) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{14}
}

type ResMaxBlockHeight struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxHeight uint64 `protobuf:"varint,1,opt,name=max_height,json=maxHeight,proto3" json:"max_height,omitempty"`
}

func (x *ResMaxBlockHeight) Reset() {
	*x = ResMaxBlockHeight{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResMaxBlockHeight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResMaxBlockHeight) ProtoMessage() {}

func (x *ResMaxBlockHeight) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResMaxBlockHeight.ProtoReflect.Descriptor instead.
func (*ResMaxBlockHeight) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{15}
}

func (x *ResMaxBlockHeight) GetMaxHeight() uint64 {
	if x != nil {
		return x.MaxHeight
	}
	return 0
}

/////contract////
type ReqKtoAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ktoaddress string `protobuf:"bytes,1,opt,name=ktoaddress,proto3" json:"ktoaddress,omitempty"`
}

func (x *ReqKtoAddress) Reset() {
	*x = ReqKtoAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqKtoAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqKtoAddress) ProtoMessage() {}

func (x *ReqKtoAddress) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqKtoAddress.ProtoReflect.Descriptor instead.
func (*ReqKtoAddress) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{16}
}

func (x *ReqKtoAddress) GetKtoaddress() string {
	if x != nil {
		return x.Ktoaddress
	}
	return ""
}

type ResEthAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ethaddress string `protobuf:"bytes,1,opt,name=ethaddress,proto3" json:"ethaddress,omitempty"`
	Code       int32  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message    string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ResEthAddress) Reset() {
	*x = ResEthAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResEthAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResEthAddress) ProtoMessage() {}

func (x *ResEthAddress) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResEthAddress.ProtoReflect.Descriptor instead.
func (*ResEthAddress) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{17}
}

func (x *ResEthAddress) GetEthaddress() string {
	if x != nil {
		return x.Ethaddress
	}
	return ""
}

func (x *ResEthAddress) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ResEthAddress) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ReqEthAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ethaddress string `protobuf:"bytes,1,opt,name=ethaddress,proto3" json:"ethaddress,omitempty"`
}

func (x *ReqEthAddress) Reset() {
	*x = ReqEthAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqEthAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqEthAddress) ProtoMessage() {}

func (x *ReqEthAddress) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqEthAddress.ProtoReflect.Descriptor instead.
func (*ReqEthAddress) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{18}
}

func (x *ReqEthAddress) GetEthaddress() string {
	if x != nil {
		return x.Ethaddress
	}
	return ""
}

type ResKtoAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ktoaddress string `protobuf:"bytes,1,opt,name=ktoaddress,proto3" json:"ktoaddress,omitempty"`
	Code       int32  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message    string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ResKtoAddress) Reset() {
	*x = ResKtoAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResKtoAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResKtoAddress) ProtoMessage() {}

func (x *ResKtoAddress) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResKtoAddress.ProtoReflect.Descriptor instead.
func (*ResKtoAddress) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{19}
}

func (x *ResKtoAddress) GetKtoaddress() string {
	if x != nil {
		return x.Ktoaddress
	}
	return ""
}

func (x *ResKtoAddress) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ResKtoAddress) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ReqEthSignTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EthFrom string `protobuf:"bytes,1,opt,name=ethFrom,proto3" json:"ethFrom,omitempty"`
	EthData string `protobuf:"bytes,2,opt,name=ethData,proto3" json:"ethData,omitempty"`
	KtoFrom string `protobuf:"bytes,3,opt,name=ktoFrom,proto3" json:"ktoFrom,omitempty"`
	MsgHash []byte `protobuf:"bytes,4,opt,name=msgHash,proto3" json:"msgHash,omitempty"`
}

func (x *ReqEthSignTransaction) Reset() {
	*x = ReqEthSignTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqEthSignTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqEthSignTransaction) ProtoMessage() {}

func (x *ReqEthSignTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqEthSignTransaction.ProtoReflect.Descriptor instead.
func (*ReqEthSignTransaction) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{20}
}

func (x *ReqEthSignTransaction) GetEthFrom() string {
	if x != nil {
		return x.EthFrom
	}
	return ""
}

func (x *ReqEthSignTransaction) GetEthData() string {
	if x != nil {
		return x.EthData
	}
	return ""
}

func (x *ReqEthSignTransaction) GetKtoFrom() string {
	if x != nil {
		return x.KtoFrom
	}
	return ""
}

func (x *ReqEthSignTransaction) GetMsgHash() []byte {
	if x != nil {
		return x.MsgHash
	}
	return nil
}

type ResEthSignTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *ResEthSignTransaction) Reset() {
	*x = ResEthSignTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResEthSignTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResEthSignTransaction) ProtoMessage() {}

func (x *ResEthSignTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResEthSignTransaction.ProtoReflect.Descriptor instead.
func (*ResEthSignTransaction) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{21}
}

func (x *ResEthSignTransaction) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type ReqCallContract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inputcode       string `protobuf:"bytes,1,opt,name=inputcode,proto3" json:"inputcode,omitempty"`
	Origin          string `protobuf:"bytes,2,opt,name=origin,proto3" json:"origin,omitempty"`
	Contractaddress string `protobuf:"bytes,3,opt,name=contractaddress,proto3" json:"contractaddress,omitempty"`
	Value           string `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ReqCallContract) Reset() {
	*x = ReqCallContract{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCallContract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCallContract) ProtoMessage() {}

func (x *ReqCallContract) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCallContract.ProtoReflect.Descriptor instead.
func (*ReqCallContract) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{22}
}

func (x *ReqCallContract) GetInputcode() string {
	if x != nil {
		return x.Inputcode
	}
	return ""
}

func (x *ReqCallContract) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *ReqCallContract) GetContractaddress() string {
	if x != nil {
		return x.Contractaddress
	}
	return ""
}

func (x *ReqCallContract) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type ResCallContract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg    string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	Result string `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	Gas    string `protobuf:"bytes,3,opt,name=gas,proto3" json:"gas,omitempty"`
	Code   int32  `protobuf:"varint,4,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *ResCallContract) Reset() {
	*x = ResCallContract{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCallContract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCallContract) ProtoMessage() {}

func (x *ResCallContract) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCallContract.ProtoReflect.Descriptor instead.
func (*ResCallContract) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{23}
}

func (x *ResCallContract) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ResCallContract) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *ResCallContract) GetGas() string {
	if x != nil {
		return x.Gas
	}
	return ""
}

func (x *ResCallContract) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

type ReqEvmGetcode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contract string `protobuf:"bytes,1,opt,name=contract,proto3" json:"contract,omitempty"`
}

func (x *ReqEvmGetcode) Reset() {
	*x = ReqEvmGetcode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqEvmGetcode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqEvmGetcode) ProtoMessage() {}

func (x *ReqEvmGetcode) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqEvmGetcode.ProtoReflect.Descriptor instead.
func (*ReqEvmGetcode) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{24}
}

func (x *ReqEvmGetcode) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

type ResEvmGetcode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *ResEvmGetcode) Reset() {
	*x = ResEvmGetcode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResEvmGetcode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResEvmGetcode) ProtoMessage() {}

func (x *ResEvmGetcode) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResEvmGetcode.ProtoReflect.Descriptor instead.
func (*ResEvmGetcode) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{25}
}

func (x *ResEvmGetcode) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type ReqGetstorage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr string `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Hash string `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *ReqGetstorage) Reset() {
	*x = ReqGetstorage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetstorage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetstorage) ProtoMessage() {}

func (x *ReqGetstorage) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetstorage.ProtoReflect.Descriptor instead.
func (*ReqGetstorage) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{26}
}

func (x *ReqGetstorage) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *ReqGetstorage) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type ResGetstorage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ResGetstorage) Reset() {
	*x = ResGetstorage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResGetstorage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResGetstorage) ProtoMessage() {}

func (x *ResGetstorage) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResGetstorage.ProtoReflect.Descriptor instead.
func (*ResGetstorage) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{27}
}

func (x *ResGetstorage) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type ReqLogs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address   string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	FromBlock uint64   `protobuf:"varint,2,opt,name=fromBlock,proto3" json:"fromBlock,omitempty"`
	ToBlock   uint64   `protobuf:"varint,3,opt,name=toBlock,proto3" json:"toBlock,omitempty"`
	Topics    []string `protobuf:"bytes,4,rep,name=topics,proto3" json:"topics,omitempty"`
	BlockHash string   `protobuf:"bytes,5,opt,name=blockHash,proto3" json:"blockHash,omitempty"`
}

func (x *ReqLogs) Reset() {
	*x = ReqLogs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqLogs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqLogs) ProtoMessage() {}

func (x *ReqLogs) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqLogs.ProtoReflect.Descriptor instead.
func (*ReqLogs) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{28}
}

func (x *ReqLogs) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ReqLogs) GetFromBlock() uint64 {
	if x != nil {
		return x.FromBlock
	}
	return 0
}

func (x *ReqLogs) GetToBlock() uint64 {
	if x != nil {
		return x.ToBlock
	}
	return 0
}

func (x *ReqLogs) GetTopics() []string {
	if x != nil {
		return x.Topics
	}
	return nil
}

func (x *ReqLogs) GetBlockHash() string {
	if x != nil {
		return x.BlockHash
	}
	return ""
}

type ResLogs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Evmlogs []byte `protobuf:"bytes,1,opt,name=evmlogs,proto3" json:"evmlogs,omitempty"`
}

func (x *ResLogs) Reset() {
	*x = ResLogs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResLogs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResLogs) ProtoMessage() {}

func (x *ResLogs) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResLogs.ProtoReflect.Descriptor instead.
func (*ResLogs) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{29}
}

func (x *ResLogs) GetEvmlogs() []byte {
	if x != nil {
		return x.Evmlogs
	}
	return nil
}

type ReqTransfer20Token struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From      string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To        string `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Amount    uint64 `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Nonce     uint64 `protobuf:"varint,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Signature []byte `protobuf:"bytes,5,opt,name=signature,proto3" json:"signature,omitempty"`
	Contract  string `protobuf:"bytes,6,opt,name=contract,proto3" json:"contract,omitempty"`
	Input     string `protobuf:"bytes,7,opt,name=input,proto3" json:"input,omitempty"`
}

func (x *ReqTransfer20Token) Reset() {
	*x = ReqTransfer20Token{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqTransfer20Token) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqTransfer20Token) ProtoMessage() {}

func (x *ReqTransfer20Token) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqTransfer20Token.ProtoReflect.Descriptor instead.
func (*ReqTransfer20Token) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{30}
}

func (x *ReqTransfer20Token) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *ReqTransfer20Token) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *ReqTransfer20Token) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ReqTransfer20Token) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *ReqTransfer20Token) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *ReqTransfer20Token) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

func (x *ReqTransfer20Token) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

type ResTransfer20Token struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *ResTransfer20Token) Reset() {
	*x = ResTransfer20Token{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResTransfer20Token) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResTransfer20Token) ProtoMessage() {}

func (x *ResTransfer20Token) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResTransfer20Token.ProtoReflect.Descriptor instead.
func (*ResTransfer20Token) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{31}
}

func (x *ResTransfer20Token) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type ReqPledgeTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From      string `protobuf:"bytes,1,opt,name=From,proto3" json:"From,omitempty"`
	Amount    uint64 `protobuf:"varint,2,opt,name=Amount,proto3" json:"Amount,omitempty"`
	Nonce     uint64 `protobuf:"varint,3,opt,name=Nonce,proto3" json:"Nonce,omitempty"`
	Signature []byte `protobuf:"bytes,4,opt,name=Signature,proto3" json:"Signature,omitempty"`
	GasLimit  uint64 `protobuf:"varint,5,opt,name=GasLimit,proto3" json:"GasLimit,omitempty"`
	GasFeeCap uint64 `protobuf:"varint,6,opt,name=GasFeeCap,proto3" json:"GasFeeCap,omitempty"`
	GasPrice  uint64 `protobuf:"varint,7,opt,name=GasPrice,proto3" json:"GasPrice,omitempty"`
	Type      string `protobuf:"bytes,8,opt,name=Type,proto3" json:"Type,omitempty"`
}

func (x *ReqPledgeTransaction) Reset() {
	*x = ReqPledgeTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqPledgeTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqPledgeTransaction) ProtoMessage() {}

func (x *ReqPledgeTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqPledgeTransaction.ProtoReflect.Descriptor instead.
func (*ReqPledgeTransaction) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{32}
}

func (x *ReqPledgeTransaction) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *ReqPledgeTransaction) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ReqPledgeTransaction) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *ReqPledgeTransaction) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *ReqPledgeTransaction) GetGasLimit() uint64 {
	if x != nil {
		return x.GasLimit
	}
	return 0
}

func (x *ReqPledgeTransaction) GetGasFeeCap() uint64 {
	if x != nil {
		return x.GasFeeCap
	}
	return 0
}

func (x *ReqPledgeTransaction) GetGasPrice() uint64 {
	if x != nil {
		return x.GasPrice
	}
	return 0
}

func (x *ReqPledgeTransaction) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type ResPledgeTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash string `protobuf:"bytes,1,opt,name=Hash,proto3" json:"Hash,omitempty"`
}

func (x *ResPledgeTransaction) Reset() {
	*x = ResPledgeTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResPledgeTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResPledgeTransaction) ProtoMessage() {}

func (x *ResPledgeTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResPledgeTransaction.ProtoReflect.Descriptor instead.
func (*ResPledgeTransaction) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{33}
}

func (x *ResPledgeTransaction) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type ResPledge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalPledge uint64 `protobuf:"varint,1,opt,name=totalPledge,proto3" json:"totalPledge,omitempty"`
	TotalMined  uint64 `protobuf:"varint,2,opt,name=totalMined,proto3" json:"totalMined,omitempty"`
	Code        int32  `protobuf:"varint,3,opt,name=code,proto3" json:"code,omitempty"`
	Message     string `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ResPledge) Reset() {
	*x = ResPledge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResPledge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResPledge) ProtoMessage() {}

func (x *ResPledge) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResPledge.ProtoReflect.Descriptor instead.
func (*ResPledge) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{34}
}

func (x *ResPledge) GetTotalPledge() uint64 {
	if x != nil {
		return x.TotalPledge
	}
	return 0
}

func (x *ResPledge) GetTotalMined() uint64 {
	if x != nil {
		return x.TotalMined
	}
	return 0
}

func (x *ResPledge) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ResPledge) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type HashMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Hash    string `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *HashMsg) Reset() {
	*x = HashMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HashMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HashMsg) ProtoMessage() {}

func (x *HashMsg) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HashMsg.ProtoReflect.Descriptor instead.
func (*HashMsg) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{35}
}

func (x *HashMsg) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *HashMsg) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *HashMsg) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type ReqTokenTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From      string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To        string `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Nonce     uint64 `protobuf:"varint,3,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Input     []byte `protobuf:"bytes,4,opt,name=input,proto3" json:"input,omitempty"`
	Time      int64  `protobuf:"varint,5,opt,name=time,proto3" json:"time,omitempty"`
	Hash      []byte `protobuf:"bytes,6,opt,name=hash,proto3" json:"hash,omitempty"`
	Signature []byte `protobuf:"bytes,7,opt,name=signature,proto3" json:"signature,omitempty"`
	GasLimit  uint64 `protobuf:"varint,8,opt,name=GasLimit,proto3" json:"GasLimit,omitempty"`
	GasFeeCap uint64 `protobuf:"varint,9,opt,name=GasFeeCap,proto3" json:"GasFeeCap,omitempty"`
	GasPrice  uint64 `protobuf:"varint,10,opt,name=GasPrice,proto3" json:"GasPrice,omitempty"`
}

func (x *ReqTokenTransaction) Reset() {
	*x = ReqTokenTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqTokenTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqTokenTransaction) ProtoMessage() {}

func (x *ReqTokenTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqTokenTransaction.ProtoReflect.Descriptor instead.
func (*ReqTokenTransaction) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{36}
}

func (x *ReqTokenTransaction) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *ReqTokenTransaction) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *ReqTokenTransaction) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *ReqTokenTransaction) GetInput() []byte {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *ReqTokenTransaction) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *ReqTokenTransaction) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *ReqTokenTransaction) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *ReqTokenTransaction) GetGasLimit() uint64 {
	if x != nil {
		return x.GasLimit
	}
	return 0
}

func (x *ReqTokenTransaction) GetGasFeeCap() uint64 {
	if x != nil {
		return x.GasFeeCap
	}
	return 0
}

func (x *ReqTokenTransaction) GetGasPrice() uint64 {
	if x != nil {
		return x.GasPrice
	}
	return 0
}

type RespTokenTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *RespTokenTransaction) Reset() {
	*x = RespTokenTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespTokenTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespTokenTransaction) ProtoMessage() {}

func (x *RespTokenTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespTokenTransaction.ProtoReflect.Descriptor instead.
func (*RespTokenTransaction) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{37}
}

func (x *RespTokenTransaction) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type ReqTokenCreate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From      string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To        string `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Nonce     uint64 `protobuf:"varint,3,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Total     uint64 `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	Symbol    string `protobuf:"bytes,5,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Time      int64  `protobuf:"varint,6,opt,name=time,proto3" json:"time,omitempty"`
	Hash      []byte `protobuf:"bytes,7,opt,name=hash,proto3" json:"hash,omitempty"`
	Signature []byte `protobuf:"bytes,8,opt,name=signature,proto3" json:"signature,omitempty"`
	GasLimit  uint64 `protobuf:"varint,9,opt,name=GasLimit,proto3" json:"GasLimit,omitempty"`
	GasFeeCap uint64 `protobuf:"varint,10,opt,name=GasFeeCap,proto3" json:"GasFeeCap,omitempty"`
	GasPrice  uint64 `protobuf:"varint,11,opt,name=GasPrice,proto3" json:"GasPrice,omitempty"`
	Demic     uint64 `protobuf:"varint,12,opt,name=demic,proto3" json:"demic,omitempty"`
	Input     []byte `protobuf:"bytes,13,opt,name=input,proto3" json:"input,omitempty"`
}

func (x *ReqTokenCreate) Reset() {
	*x = ReqTokenCreate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqTokenCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqTokenCreate) ProtoMessage() {}

func (x *ReqTokenCreate) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqTokenCreate.ProtoReflect.Descriptor instead.
func (*ReqTokenCreate) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{38}
}

func (x *ReqTokenCreate) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *ReqTokenCreate) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *ReqTokenCreate) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *ReqTokenCreate) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ReqTokenCreate) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *ReqTokenCreate) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *ReqTokenCreate) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *ReqTokenCreate) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *ReqTokenCreate) GetGasLimit() uint64 {
	if x != nil {
		return x.GasLimit
	}
	return 0
}

func (x *ReqTokenCreate) GetGasFeeCap() uint64 {
	if x != nil {
		return x.GasFeeCap
	}
	return 0
}

func (x *ReqTokenCreate) GetGasPrice() uint64 {
	if x != nil {
		return x.GasPrice
	}
	return 0
}

func (x *ReqTokenCreate) GetDemic() uint64 {
	if x != nil {
		return x.Demic
	}
	return 0
}

func (x *ReqTokenCreate) GetInput() []byte {
	if x != nil {
		return x.Input
	}
	return nil
}

type ReqTokenBalance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Symbol  string `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
}

func (x *ReqTokenBalance) Reset() {
	*x = ReqTokenBalance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqTokenBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqTokenBalance) ProtoMessage() {}

func (x *ReqTokenBalance) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqTokenBalance.ProtoReflect.Descriptor instead.
func (*ReqTokenBalance) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{39}
}

func (x *ReqTokenBalance) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ReqTokenBalance) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

type RespTokenBalance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balnce uint64 `protobuf:"varint,1,opt,name=balnce,proto3" json:"balnce,omitempty"`
	Demic  uint64 `protobuf:"varint,2,opt,name=demic,proto3" json:"demic,omitempty"`
}

func (x *RespTokenBalance) Reset() {
	*x = RespTokenBalance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespTokenBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespTokenBalance) ProtoMessage() {}

func (x *RespTokenBalance) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespTokenBalance.ProtoReflect.Descriptor instead.
func (*RespTokenBalance) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{40}
}

func (x *RespTokenBalance) GetBalnce() uint64 {
	if x != nil {
		return x.Balnce
	}
	return 0
}

func (x *RespTokenBalance) GetDemic() uint64 {
	if x != nil {
		return x.Demic
	}
	return 0
}

type ReqSignBalance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To   string `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *ReqSignBalance) Reset() {
	*x = ReqSignBalance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSignBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSignBalance) ProtoMessage() {}

func (x *ReqSignBalance) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSignBalance.ProtoReflect.Descriptor instead.
func (*ReqSignBalance) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{41}
}

func (x *ReqSignBalance) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *ReqSignBalance) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

type ReqWholeNetworkPledge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReqWholeNetworkPledge) Reset() {
	*x = ReqWholeNetworkPledge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqWholeNetworkPledge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqWholeNetworkPledge) ProtoMessage() {}

func (x *ReqWholeNetworkPledge) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqWholeNetworkPledge.ProtoReflect.Descriptor instead.
func (*ReqWholeNetworkPledge) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{42}
}

type ResWholeNetworkPledge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WholeNetworkPledge uint64 `protobuf:"varint,1,opt,name=wholeNetworkPledge,proto3" json:"wholeNetworkPledge,omitempty"`
}

func (x *ResWholeNetworkPledge) Reset() {
	*x = ResWholeNetworkPledge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResWholeNetworkPledge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResWholeNetworkPledge) ProtoMessage() {}

func (x *ResWholeNetworkPledge) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResWholeNetworkPledge.ProtoReflect.Descriptor instead.
func (*ResWholeNetworkPledge) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{43}
}

func (x *ResWholeNetworkPledge) GetWholeNetworkPledge() uint64 {
	if x != nil {
		return x.WholeNetworkPledge
	}
	return 0
}

type ReqGetAvailableBalance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *ReqGetAvailableBalance) Reset() {
	*x = ReqGetAvailableBalance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetAvailableBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetAvailableBalance) ProtoMessage() {}

func (x *ReqGetAvailableBalance) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetAvailableBalance.ProtoReflect.Descriptor instead.
func (*ReqGetAvailableBalance) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{44}
}

func (x *ReqGetAvailableBalance) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type ResGetAvailableBalance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvailableBalance uint64 `protobuf:"varint,1,opt,name=availableBalance,proto3" json:"availableBalance,omitempty"`
}

func (x *ResGetAvailableBalance) Reset() {
	*x = ResGetAvailableBalance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResGetAvailableBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResGetAvailableBalance) ProtoMessage() {}

func (x *ResGetAvailableBalance) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResGetAvailableBalance.ProtoReflect.Descriptor instead.
func (*ResGetAvailableBalance) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{45}
}

func (x *ResGetAvailableBalance) GetAvailableBalance() uint64 {
	if x != nil {
		return x.AvailableBalance
	}
	return 0
}

type ReqHasherPerSecond struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReqHasherPerSecond) Reset() {
	*x = ReqHasherPerSecond{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqHasherPerSecond) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqHasherPerSecond) ProtoMessage() {}

func (x *ReqHasherPerSecond) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqHasherPerSecond.ProtoReflect.Descriptor instead.
func (*ReqHasherPerSecond) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{46}
}

type ResHasherPerSecond struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address         string  `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Uuid            string  `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	HasherPerSecond float32 `protobuf:"fixed32,3,opt,name=hasherPerSecond,proto3" json:"hasherPerSecond,omitempty"`
}

func (x *ResHasherPerSecond) Reset() {
	*x = ResHasherPerSecond{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResHasherPerSecond) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResHasherPerSecond) ProtoMessage() {}

func (x *ResHasherPerSecond) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResHasherPerSecond.ProtoReflect.Descriptor instead.
func (*ResHasherPerSecond) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{47}
}

func (x *ResHasherPerSecond) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ResHasherPerSecond) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ResHasherPerSecond) GetHasherPerSecond() float32 {
	if x != nil {
		return x.HasherPerSecond
	}
	return 0
}

type Req_WithdrawToEthaddr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From      string `protobuf:"bytes,1,opt,name=From,proto3" json:"From,omitempty"`
	To        string `protobuf:"bytes,2,opt,name=To,proto3" json:"To,omitempty"`
	Amount    uint64 `protobuf:"varint,3,opt,name=Amount,proto3" json:"Amount,omitempty"`
	Nonce     uint64 `protobuf:"varint,4,opt,name=Nonce,proto3" json:"Nonce,omitempty"`
	Sign      []byte `protobuf:"bytes,5,opt,name=Sign,proto3" json:"Sign,omitempty"`
	GasLimit  uint64 `protobuf:"varint,6,opt,name=GasLimit,proto3" json:"GasLimit,omitempty"`
	GasFeeCap uint64 `protobuf:"varint,7,opt,name=GasFeeCap,proto3" json:"GasFeeCap,omitempty"`
	GasPrice  uint64 `protobuf:"varint,8,opt,name=GasPrice,proto3" json:"GasPrice,omitempty"`
	Input     []byte `protobuf:"bytes,9,opt,name=Input,proto3" json:"Input,omitempty"`
}

func (x *Req_WithdrawToEthaddr) Reset() {
	*x = Req_WithdrawToEthaddr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Req_WithdrawToEthaddr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Req_WithdrawToEthaddr) ProtoMessage() {}

func (x *Req_WithdrawToEthaddr) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Req_WithdrawToEthaddr.ProtoReflect.Descriptor instead.
func (*Req_WithdrawToEthaddr) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{48}
}

func (x *Req_WithdrawToEthaddr) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *Req_WithdrawToEthaddr) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *Req_WithdrawToEthaddr) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Req_WithdrawToEthaddr) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *Req_WithdrawToEthaddr) GetSign() []byte {
	if x != nil {
		return x.Sign
	}
	return nil
}

func (x *Req_WithdrawToEthaddr) GetGasLimit() uint64 {
	if x != nil {
		return x.GasLimit
	}
	return 0
}

func (x *Req_WithdrawToEthaddr) GetGasFeeCap() uint64 {
	if x != nil {
		return x.GasFeeCap
	}
	return 0
}

func (x *Req_WithdrawToEthaddr) GetGasPrice() uint64 {
	if x != nil {
		return x.GasPrice
	}
	return 0
}

func (x *Req_WithdrawToEthaddr) GetInput() []byte {
	if x != nil {
		return x.Input
	}
	return nil
}

type Res_WithdrawToEthaddr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash string `protobuf:"bytes,1,opt,name=Hash,proto3" json:"Hash,omitempty"`
}

func (x *Res_WithdrawToEthaddr) Reset() {
	*x = Res_WithdrawToEthaddr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Res_WithdrawToEthaddr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Res_WithdrawToEthaddr) ProtoMessage() {}

func (x *Res_WithdrawToEthaddr) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Res_WithdrawToEthaddr.ProtoReflect.Descriptor instead.
func (*Res_WithdrawToEthaddr) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{49}
}

func (x *Res_WithdrawToEthaddr) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type ReqBasePledge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReqBasePledge) Reset() {
	*x = ReqBasePledge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqBasePledge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqBasePledge) ProtoMessage() {}

func (x *ReqBasePledge) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqBasePledge.ProtoReflect.Descriptor instead.
func (*ReqBasePledge) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{50}
}

type RespBasePledge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalNumber uint64 `protobuf:"varint,1,opt,name=TotalNumber,proto3" json:"TotalNumber,omitempty"`
}

func (x *RespBasePledge) Reset() {
	*x = RespBasePledge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespBasePledge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespBasePledge) ProtoMessage() {}

func (x *RespBasePledge) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespBasePledge.ProtoReflect.Descriptor instead.
func (*RespBasePledge) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{51}
}

func (x *RespBasePledge) GetTotalNumber() uint64 {
	if x != nil {
		return x.TotalNumber
	}
	return 0
}

var File_message_proto protoreflect.FileDescriptor

var file_message_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x27, 0x0a, 0x0b, 0x72, 0x65, 0x71, 0x5f,
	0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x22, 0x27, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0xe3, 0x01, 0x0a, 0x0f, 0x72,
	0x65, 0x71, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x46, 0x72,
	0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x54, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x54, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4e, 0x6f,
	0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x4e, 0x6f, 0x6e, 0x63, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x67, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x53, 0x69, 0x67, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x47, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x47, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x47, 0x61, 0x73, 0x46, 0x65, 0x65, 0x43, 0x61, 0x70, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x47, 0x61, 0x73, 0x46, 0x65, 0x65, 0x43, 0x61, 0x70, 0x12, 0x1a,
	0x0a, 0x08, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x08, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x22, 0x25, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x48, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x48, 0x61, 0x73, 0x68, 0x22, 0x2d, 0x0a, 0x13, 0x72, 0x65, 0x71, 0x5f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x62, 0x79, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x27, 0x0a, 0x11, 0x72, 0x65, 0x71, 0x5f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x62, 0x79, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x68,
	0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22,
	0x4e, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0xf0, 0x01, 0x0a, 0x02, 0x54, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x46, 0x72, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x46, 0x72, 0x6f, 0x6d,
	0x12, 0x0e, 0x0a, 0x02, 0x54, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x54, 0x6f,
	0x12, 0x1a, 0x0a, 0x08, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x47, 0x61, 0x73, 0x46, 0x65, 0x65, 0x43, 0x61, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x47, 0x61, 0x73, 0x46, 0x65, 0x65, 0x43, 0x61, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x47, 0x61,
	0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x47, 0x61,
	0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x4e, 0x6f, 0x6e,
	0x63, 0x65, 0x22, 0xa6, 0x02, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x16, 0x0a, 0x06,
	0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x72, 0x65, 0x76, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x48, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x50, 0x72, 0x65,
	0x76, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x48, 0x61,
	0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x48, 0x61, 0x73, 0x68, 0x12, 0x18,
	0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1d, 0x0a, 0x03, 0x54, 0x78, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x78,
	0x52, 0x03, 0x54, 0x78, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x6f, 0x6f, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x69, 0x6e,
	0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x47, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x47, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x47, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x53, 0x0a, 0x0f, 0x72,
	0x65, 0x73, 0x70, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x24, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x5f, 0x74, 0x78, 0x5f, 0x62, 0x79, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x53, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x74,
	0x78, 0x5f, 0x62, 0x79, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x25, 0x0a, 0x0d, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6e, 0x6f, 0x6e,
	0x63, 0x65, 0x22, 0x25, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x15, 0x0a, 0x13, 0x72, 0x65, 0x71,
	0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x22, 0x34, 0x0a, 0x13, 0x72, 0x65, 0x73, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6d, 0x61, 0x78,
	0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x31, 0x0a, 0x0f, 0x72, 0x65, 0x71, 0x5f, 0x6b, 0x74,
	0x6f, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6b, 0x74, 0x6f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6b,
	0x74, 0x6f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x5f, 0x0a, 0x0f, 0x72, 0x65, 0x73,
	0x5f, 0x65, 0x74, 0x68, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a,
	0x65, 0x74, 0x68, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x65, 0x74, 0x68, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x31, 0x0a, 0x0f, 0x72, 0x65,
	0x71, 0x5f, 0x65, 0x74, 0x68, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x65, 0x74, 0x68, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x65, 0x74, 0x68, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x5f, 0x0a,
	0x0f, 0x72, 0x65, 0x73, 0x5f, 0x6b, 0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x6b, 0x74, 0x6f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6b, 0x74, 0x6f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x82,
	0x01, 0x0a, 0x18, 0x72, 0x65, 0x71, 0x5f, 0x65, 0x74, 0x68, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x5f,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x74, 0x68, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x74,
	0x68, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x74, 0x68, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x74, 0x68, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x18, 0x0a, 0x07, 0x6b, 0x74, 0x6f, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6b, 0x74, 0x6f, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x73, 0x67,
	0x48, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x48,
	0x61, 0x73, 0x68, 0x22, 0x2e, 0x0a, 0x18, 0x72, 0x65, 0x73, 0x5f, 0x65, 0x74, 0x68, 0x5f, 0x73,
	0x69, 0x67, 0x6e, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68,
	0x61, 0x73, 0x68, 0x22, 0x89, 0x01, 0x0a, 0x11, 0x72, 0x65, 0x71, 0x5f, 0x63, 0x61, 0x6c, 0x6c,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12,
	0x28, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x63, 0x0a, 0x11, 0x72, 0x65, 0x73, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x67, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x67, 0x61, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x22, 0x2d, 0x0a, 0x0f, 0x72, 0x65, 0x71, 0x5f, 0x65, 0x76, 0x6d, 0x5f,
	0x67, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x22, 0x25, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x5f, 0x65, 0x76, 0x6d, 0x5f, 0x67,
	0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x38, 0x0a, 0x0e, 0x72, 0x65,
	0x71, 0x5f, 0x67, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x68, 0x61, 0x73, 0x68, 0x22, 0x28, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x5f, 0x67, 0x65, 0x74, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x92,
	0x01, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x5f, 0x6c, 0x6f, 0x67, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x6f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x16, 0x0a,
	0x06, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61,
	0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48,
	0x61, 0x73, 0x68, 0x22, 0x24, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x5f, 0x6c, 0x6f, 0x67, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x76, 0x6d, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x07, 0x65, 0x76, 0x6d, 0x6c, 0x6f, 0x67, 0x73, 0x22, 0xb7, 0x01, 0x0a, 0x13, 0x72, 0x65,
	0x71, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x32, 0x30, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6e, 0x6f,
	0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x22, 0x29, 0x0a, 0x13, 0x72, 0x65, 0x73, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x32, 0x30, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0xe2,
	0x01, 0x0a, 0x16, 0x72, 0x65, 0x71, 0x5f, 0x70, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x72, 0x6f,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x16, 0x0a,
	0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x47, 0x61, 0x73,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x47, 0x61, 0x73,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x47, 0x61, 0x73, 0x46, 0x65, 0x65, 0x43,
	0x61, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x47, 0x61, 0x73, 0x46, 0x65, 0x65,
	0x43, 0x61, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x2c, 0x0a, 0x16, 0x72, 0x65, 0x73, 0x5f, 0x70, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x48, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x48, 0x61, 0x73,
	0x68, 0x22, 0x7c, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x5f, 0x70, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x69, 0x6e, 0x65, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x69, 0x6e, 0x65,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x4b, 0x0a, 0x07, 0x68, 0x61, 0x73, 0x68, 0x4d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x83, 0x02, 0x0a,
	0x15, 0x72, 0x65, 0x71, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f,
	0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x47, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x47, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x47, 0x61, 0x73, 0x46,
	0x65, 0x65, 0x43, 0x61, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x47, 0x61, 0x73,
	0x46, 0x65, 0x65, 0x43, 0x61, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x22, 0x2c, 0x0a, 0x16, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68,
	0x22, 0xc2, 0x02, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x47, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x47, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x47, 0x61, 0x73, 0x46, 0x65, 0x65, 0x43, 0x61, 0x70, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x47, 0x61, 0x73, 0x46, 0x65, 0x65, 0x43, 0x61, 0x70, 0x12, 0x1a, 0x0a,
	0x08, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x6d,
	0x69, 0x63, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x64, 0x65, 0x6d, 0x69, 0x63, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05,
	0x69, 0x6e, 0x70, 0x75, 0x74, 0x22, 0x45, 0x0a, 0x11, 0x72, 0x65, 0x71, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x22, 0x42, 0x0a, 0x12,
	0x72, 0x65, 0x73, 0x70, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x61, 0x6c, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x62, 0x61, 0x6c, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65,
	0x6d, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x64, 0x65, 0x6d, 0x69, 0x63,
	0x22, 0x36, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x22, 0x18, 0x0a, 0x16, 0x72, 0x65, 0x71, 0x5f,
	0x77, 0x68, 0x6f, 0x6c, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x50, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x22, 0x48, 0x0a, 0x16, 0x72, 0x65, 0x73, 0x5f, 0x77, 0x68, 0x6f, 0x6c, 0x65, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x50, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x12,
	0x77, 0x68, 0x6f, 0x6c, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x50, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x77, 0x68, 0x6f, 0x6c, 0x65, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x50, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x22, 0x33, 0x0a, 0x17,
	0x72, 0x65, 0x71, 0x5f, 0x67, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x22, 0x45, 0x0a, 0x17, 0x72, 0x65, 0x73, 0x5f, 0x67, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x10,
	0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x72, 0x65, 0x71, 0x5f,
	0x68, 0x61, 0x73, 0x68, 0x65, 0x72, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x22, 0x6f, 0x0a, 0x15, 0x72, 0x65, 0x73, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x65, 0x72, 0x5f,
	0x70, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x68, 0x61, 0x73, 0x68,
	0x65, 0x72, 0x50, 0x65, 0x72, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0f, 0x68, 0x61, 0x73, 0x68, 0x65, 0x72, 0x50, 0x65, 0x72, 0x53, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x22, 0xe9, 0x01, 0x0a, 0x15, 0x72, 0x65, 0x71, 0x5f, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x54, 0x6f, 0x45, 0x74, 0x68, 0x61, 0x64, 0x64, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x46, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x46, 0x72, 0x6f, 0x6d,
	0x12, 0x0e, 0x0a, 0x02, 0x54, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x54, 0x6f,
	0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4e, 0x6f, 0x6e, 0x63,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x53, 0x69, 0x67, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x53, 0x69,
	0x67, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x47, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x47, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x47, 0x61, 0x73, 0x46, 0x65, 0x65, 0x43, 0x61, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x47, 0x61, 0x73, 0x46, 0x65, 0x65, 0x43, 0x61, 0x70, 0x12, 0x1a, 0x0a, 0x08,
	0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x22, 0x2b,
	0x0a, 0x15, 0x72, 0x65, 0x73, 0x5f, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x54, 0x6f,
	0x45, 0x74, 0x68, 0x61, 0x64, 0x64, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x48, 0x61, 0x73, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x48, 0x61, 0x73, 0x68, 0x22, 0x10, 0x0a, 0x0e, 0x72,
	0x65, 0x71, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x50, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x22, 0x33, 0x0a,
	0x0f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x50, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x32, 0xc9, 0x0a, 0x0a, 0x07, 0x47, 0x72, 0x65, 0x65, 0x74, 0x65, 0x72, 0x12, 0x3a,
	0x0a, 0x0a, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x71, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x1a, 0x14, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x73,
	0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0f, 0x53, 0x65,
	0x6e, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x71, 0x5f, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x18, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x72, 0x65, 0x73, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x13, 0x53, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x63, 0x6b, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x71, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x18, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x72,
	0x65, 0x73, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x00,
	0x12, 0x4d, 0x0a, 0x15, 0x53, 0x65, 0x6e, 0x64, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x71, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x1a, 0x18, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x72, 0x65,
	0x73, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x12,
	0x44, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x4e, 0x75, 0x6d,
	0x12, 0x1c, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x71, 0x5f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x62, 0x79, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x1a, 0x13,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x54, 0x78, 0x42, 0x79,
	0x48, 0x61, 0x73, 0x68, 0x12, 0x17, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x72,
	0x65, 0x71, 0x5f, 0x74, 0x78, 0x5f, 0x62, 0x79, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x1a, 0x18, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x74, 0x78, 0x5f,
	0x62, 0x79, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x41, 0x74, 0x12, 0x12,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x71, 0x5f, 0x6e, 0x6f, 0x6e,
	0x63, 0x65, 0x1a, 0x16, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x73, 0x65, 0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1a,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x71, 0x5f, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x62, 0x79, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x1a, 0x18, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x78,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1c, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x71, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x1a, 0x1c, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x73, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x46, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x14, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x71, 0x5f, 0x62,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x1a, 0x14, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x72, 0x65, 0x73, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x00, 0x12, 0x4b,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x46, 0x72, 0x65, 0x65, 0x7a,
	0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x19, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x72, 0x65, 0x71, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x1a, 0x14, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x72, 0x65,
	0x73, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x1b, 0x53,
	0x65, 0x6e, 0x64, 0x45, 0x74, 0x68, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x52, 0x61, 0x77, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x71, 0x5f, 0x65, 0x74, 0x68, 0x5f, 0x73, 0x69, 0x67,
	0x6e, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x21, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x73, 0x5f, 0x65, 0x74, 0x68, 0x5f,
	0x73, 0x69, 0x67, 0x6e, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x00, 0x12, 0x4d, 0x0a, 0x11, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x1a, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x72, 0x65, 0x71, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x1a, 0x1a, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x72, 0x65,
	0x73, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x22,
	0x00, 0x12, 0x3f, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x71, 0x5f, 0x65, 0x76, 0x6d, 0x5f, 0x67,
	0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x1a, 0x18, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x72, 0x65, 0x73, 0x5f, 0x65, 0x76, 0x6d, 0x5f, 0x67, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65,
	0x22, 0x00, 0x12, 0x42, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x41, 0x74, 0x12, 0x17, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x71,
	0x5f, 0x67, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x1a, 0x17, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x73, 0x5f, 0x67, 0x65, 0x74, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67,
	0x73, 0x12, 0x11, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x71, 0x5f,
	0x6c, 0x6f, 0x67, 0x73, 0x1a, 0x11, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x72,
	0x65, 0x73, 0x5f, 0x6c, 0x6f, 0x67, 0x73, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x20, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x71, 0x5f, 0x67,
	0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x1a, 0x20, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x73,
	0x5f, 0x67, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x48, 0x61, 0x73,
	0x68, 0x65, 0x72, 0x50, 0x65, 0x72, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x12, 0x1e, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x71, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x65,
	0x72, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x1a, 0x1e, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x73, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x65,
	0x72, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x22, 0x00, 0x42, 0x0c,
	0x5a, 0x0a, 0x2e, 0x2e, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_message_proto_rawDescOnce sync.Once
	file_message_proto_rawDescData = file_message_proto_rawDesc
)

func file_message_proto_rawDescGZIP() []byte {
	file_message_proto_rawDescOnce.Do(func() {
		file_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_message_proto_rawDescData)
	})
	return file_message_proto_rawDescData
}

var file_message_proto_msgTypes = make([]protoimpl.MessageInfo, 52)
var file_message_proto_goTypes = []interface{}{
	(*ReqBalance)(nil),             // 0: message.req_balance
	(*ResBalance)(nil),             // 1: message.res_balance
	(*ReqTransaction)(nil),         // 2: message.req_transaction
	(*ResTransaction)(nil),         // 3: message.res_transaction
	(*ReqBlockByNumber)(nil),       // 4: message.req_block_by_number
	(*ReqBlockByHash)(nil),         // 5: message.req_block_by_hash
	(*RespBlock)(nil),              // 6: message.resp_block
	(*Tx)(nil),                     // 7: message.Tx
	(*Block)(nil),                  // 8: message.block
	(*RespBlockDate)(nil),          // 9: message.resp_block_date
	(*ReqTxByHash)(nil),            // 10: message.req_tx_by_hash
	(*RespTxByHash)(nil),           // 11: message.resp_tx_by_hash
	(*ResposeNonce)(nil),           // 12: message.respose_nonce
	(*ReqNonce)(nil),               // 13: message.req_nonce
	(*ReqMaxBlockHeight)(nil),      // 14: message.req_max_blockHeight
	(*ResMaxBlockHeight)(nil),      // 15: message.res_max_blockHeight
	(*ReqKtoAddress)(nil),          // 16: message.req_kto_address
	(*ResEthAddress)(nil),          // 17: message.res_eth_address
	(*ReqEthAddress)(nil),          // 18: message.req_eth_address
	(*ResKtoAddress)(nil),          // 19: message.res_kto_address
	(*ReqEthSignTransaction)(nil),  // 20: message.req_eth_sign_transaction
	(*ResEthSignTransaction)(nil),  // 21: message.res_eth_sign_transaction
	(*ReqCallContract)(nil),        // 22: message.req_call_contract
	(*ResCallContract)(nil),        // 23: message.res_call_contract
	(*ReqEvmGetcode)(nil),          // 24: message.req_evm_getcode
	(*ResEvmGetcode)(nil),          // 25: message.res_evm_getcode
	(*ReqGetstorage)(nil),          // 26: message.req_getstorage
	(*ResGetstorage)(nil),          // 27: message.res_getstorage
	(*ReqLogs)(nil),                // 28: message.req_logs
	(*ResLogs)(nil),                // 29: message.res_logs
	(*ReqTransfer20Token)(nil),     // 30: message.req_transfer20token
	(*ResTransfer20Token)(nil),     // 31: message.res_transfer20token
	(*ReqPledgeTransaction)(nil),   // 32: message.req_pledge_transaction
	(*ResPledgeTransaction)(nil),   // 33: message.res_pledge_transaction
	(*ResPledge)(nil),              // 34: message.res_pledge
	(*HashMsg)(nil),                // 35: message.hashMsg
	(*ReqTokenTransaction)(nil),    // 36: message.req_token_transaction
	(*RespTokenTransaction)(nil),   // 37: message.resp_token_transaction
	(*ReqTokenCreate)(nil),         // 38: message.req_token_create
	(*ReqTokenBalance)(nil),        // 39: message.req_token_balance
	(*RespTokenBalance)(nil),       // 40: message.resp_token_balance
	(*ReqSignBalance)(nil),         // 41: message.req_sign_balance
	(*ReqWholeNetworkPledge)(nil),  // 42: message.req_wholeNetworkPledge
	(*ResWholeNetworkPledge)(nil),  // 43: message.res_wholeNetworkPledge
	(*ReqGetAvailableBalance)(nil), // 44: message.req_getAvailableBalance
	(*ResGetAvailableBalance)(nil), // 45: message.res_getAvailableBalance
	(*ReqHasherPerSecond)(nil),     // 46: message.req_hasher_per_second
	(*ResHasherPerSecond)(nil),     // 47: message.res_hasher_per_second
	(*Req_WithdrawToEthaddr)(nil),  // 48: message.req_WithdrawToEthaddr
	(*Res_WithdrawToEthaddr)(nil),  // 49: message.res_WithdrawToEthaddr
	(*ReqBasePledge)(nil),          // 50: message.req_basePledge
	(*RespBasePledge)(nil),         // 51: message.resp_basePledge
}
var file_message_proto_depIdxs = []int32{
	7,  // 0: message.block.Txs:type_name -> message.Tx
	0,  // 1: message.Greeter.GetBalance:input_type -> message.req_balance
	2,  // 2: message.Greeter.SendTransaction:input_type -> message.req_transaction
	2,  // 3: message.Greeter.SendLockTransaction:input_type -> message.req_transaction
	2,  // 4: message.Greeter.SendUnlockTransaction:input_type -> message.req_transaction
	4,  // 5: message.Greeter.GetBlockByNum:input_type -> message.req_block_by_number
	10, // 6: message.Greeter.GetTxByHash:input_type -> message.req_tx_by_hash
	13, // 7: message.Greeter.GetAddressNonceAt:input_type -> message.req_nonce
	5,  // 8: message.Greeter.GetBlockByHash:input_type -> message.req_block_by_hash
	14, // 9: message.Greeter.GetMaxBlockHeight:input_type -> message.req_max_blockHeight
	0,  // 10: message.Greeter.GetAllFreezeBalance:input_type -> message.req_balance
	41, // 11: message.Greeter.GetSingleFreezeBalance:input_type -> message.req_sign_balance
	20, // 12: message.Greeter.SendEthSignedRawTransaction:input_type -> message.req_eth_sign_transaction
	22, // 13: message.Greeter.CallSmartContract:input_type -> message.req_call_contract
	24, // 14: message.Greeter.GetCode:input_type -> message.req_evm_getcode
	26, // 15: message.Greeter.GetStorageAt:input_type -> message.req_getstorage
	28, // 16: message.Greeter.GetLogs:input_type -> message.req_logs
	44, // 17: message.Greeter.GetAvailableBalance:input_type -> message.req_getAvailableBalance
	46, // 18: message.Greeter.GetHasherPerSecond:input_type -> message.req_hasher_per_second
	1,  // 19: message.Greeter.GetBalance:output_type -> message.res_balance
	3,  // 20: message.Greeter.SendTransaction:output_type -> message.res_transaction
	3,  // 21: message.Greeter.SendLockTransaction:output_type -> message.res_transaction
	3,  // 22: message.Greeter.SendUnlockTransaction:output_type -> message.res_transaction
	6,  // 23: message.Greeter.GetBlockByNum:output_type -> message.resp_block
	11, // 24: message.Greeter.GetTxByHash:output_type -> message.resp_tx_by_hash
	12, // 25: message.Greeter.GetAddressNonceAt:output_type -> message.respose_nonce
	9,  // 26: message.Greeter.GetBlockByHash:output_type -> message.resp_block_date
	15, // 27: message.Greeter.GetMaxBlockHeight:output_type -> message.res_max_blockHeight
	1,  // 28: message.Greeter.GetAllFreezeBalance:output_type -> message.res_balance
	1,  // 29: message.Greeter.GetSingleFreezeBalance:output_type -> message.res_balance
	21, // 30: message.Greeter.SendEthSignedRawTransaction:output_type -> message.res_eth_sign_transaction
	23, // 31: message.Greeter.CallSmartContract:output_type -> message.res_call_contract
	25, // 32: message.Greeter.GetCode:output_type -> message.res_evm_getcode
	27, // 33: message.Greeter.GetStorageAt:output_type -> message.res_getstorage
	29, // 34: message.Greeter.GetLogs:output_type -> message.res_logs
	45, // 35: message.Greeter.GetAvailableBalance:output_type -> message.res_getAvailableBalance
	47, // 36: message.Greeter.GetHasherPerSecond:output_type -> message.res_hasher_per_second
	19, // [19:37] is the sub-list for method output_type
	1,  // [1:19] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_message_proto_init() }
func file_message_proto_init() {
	if File_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqBalance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResBalance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqBlockByNumber); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqBlockByHash); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Block); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespBlockDate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqTxByHash); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespTxByHash); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResposeNonce); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqNonce); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqMaxBlockHeight); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResMaxBlockHeight); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqKtoAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResEthAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqEthAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResKtoAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqEthSignTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResEthSignTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCallContract); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCallContract); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqEvmGetcode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResEvmGetcode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetstorage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResGetstorage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqLogs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResLogs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqTransfer20Token); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResTransfer20Token); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqPledgeTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResPledgeTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResPledge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HashMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqTokenTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespTokenTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqTokenCreate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqTokenBalance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespTokenBalance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSignBalance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqWholeNetworkPledge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResWholeNetworkPledge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetAvailableBalance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResGetAvailableBalance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqHasherPerSecond); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResHasherPerSecond); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Req_WithdrawToEthaddr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Res_WithdrawToEthaddr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqBasePledge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespBasePledge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_message_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   52,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_message_proto_goTypes,
		DependencyIndexes: file_message_proto_depIdxs,
		MessageInfos:      file_message_proto_msgTypes,
	}.Build()
	File_message_proto = out.File
	file_message_proto_rawDesc = nil
	file_message_proto_goTypes = nil
	file_message_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GreeterClient is the client API for Greeter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GreeterClient interface {
	GetBalance(ctx context.Context, in *ReqBalance, opts ...grpc.CallOption) (*ResBalance, error)
	SendTransaction(ctx context.Context, in *ReqTransaction, opts ...grpc.CallOption) (*ResTransaction, error)
	SendLockTransaction(ctx context.Context, in *ReqTransaction, opts ...grpc.CallOption) (*ResTransaction, error)
	SendUnlockTransaction(ctx context.Context, in *ReqTransaction, opts ...grpc.CallOption) (*ResTransaction, error)
	GetBlockByNum(ctx context.Context, in *ReqBlockByNumber, opts ...grpc.CallOption) (*RespBlock, error)
	GetTxByHash(ctx context.Context, in *ReqTxByHash, opts ...grpc.CallOption) (*RespTxByHash, error)
	GetAddressNonceAt(ctx context.Context, in *ReqNonce, opts ...grpc.CallOption) (*ResposeNonce, error)
	GetBlockByHash(ctx context.Context, in *ReqBlockByHash, opts ...grpc.CallOption) (*RespBlockDate, error)
	GetMaxBlockHeight(ctx context.Context, in *ReqMaxBlockHeight, opts ...grpc.CallOption) (*ResMaxBlockHeight, error)
	GetAllFreezeBalance(ctx context.Context, in *ReqBalance, opts ...grpc.CallOption) (*ResBalance, error)
	GetSingleFreezeBalance(ctx context.Context, in *ReqSignBalance, opts ...grpc.CallOption) (*ResBalance, error)
	SendEthSignedRawTransaction(ctx context.Context, in *ReqEthSignTransaction, opts ...grpc.CallOption) (*ResEthSignTransaction, error)
	CallSmartContract(ctx context.Context, in *ReqCallContract, opts ...grpc.CallOption) (*ResCallContract, error)
	GetCode(ctx context.Context, in *ReqEvmGetcode, opts ...grpc.CallOption) (*ResEvmGetcode, error)
	GetStorageAt(ctx context.Context, in *ReqGetstorage, opts ...grpc.CallOption) (*ResGetstorage, error)
	GetLogs(ctx context.Context, in *ReqLogs, opts ...grpc.CallOption) (*ResLogs, error)
	GetAvailableBalance(ctx context.Context, in *ReqGetAvailableBalance, opts ...grpc.CallOption) (*ResGetAvailableBalance, error)
	GetHasherPerSecond(ctx context.Context, in *ReqHasherPerSecond, opts ...grpc.CallOption) (*ResHasherPerSecond, error)
}

type greeterClient struct {
	cc grpc.ClientConnInterface
}

func NewGreeterClient(cc grpc.ClientConnInterface) GreeterClient {
	return &greeterClient{cc}
}

func (c *greeterClient) GetBalance(ctx context.Context, in *ReqBalance, opts ...grpc.CallOption) (*ResBalance, error) {
	out := new(ResBalance)
	err := c.cc.Invoke(ctx, "/message.Greeter/GetBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) SendTransaction(ctx context.Context, in *ReqTransaction, opts ...grpc.CallOption) (*ResTransaction, error) {
	out := new(ResTransaction)
	err := c.cc.Invoke(ctx, "/message.Greeter/SendTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) SendLockTransaction(ctx context.Context, in *ReqTransaction, opts ...grpc.CallOption) (*ResTransaction, error) {
	out := new(ResTransaction)
	err := c.cc.Invoke(ctx, "/message.Greeter/SendLockTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) SendUnlockTransaction(ctx context.Context, in *ReqTransaction, opts ...grpc.CallOption) (*ResTransaction, error) {
	out := new(ResTransaction)
	err := c.cc.Invoke(ctx, "/message.Greeter/SendUnlockTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) GetBlockByNum(ctx context.Context, in *ReqBlockByNumber, opts ...grpc.CallOption) (*RespBlock, error) {
	out := new(RespBlock)
	err := c.cc.Invoke(ctx, "/message.Greeter/GetBlockByNum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) GetTxByHash(ctx context.Context, in *ReqTxByHash, opts ...grpc.CallOption) (*RespTxByHash, error) {
	out := new(RespTxByHash)
	err := c.cc.Invoke(ctx, "/message.Greeter/GetTxByHash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) GetAddressNonceAt(ctx context.Context, in *ReqNonce, opts ...grpc.CallOption) (*ResposeNonce, error) {
	out := new(ResposeNonce)
	err := c.cc.Invoke(ctx, "/message.Greeter/GetAddressNonceAt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) GetBlockByHash(ctx context.Context, in *ReqBlockByHash, opts ...grpc.CallOption) (*RespBlockDate, error) {
	out := new(RespBlockDate)
	err := c.cc.Invoke(ctx, "/message.Greeter/GetBlockByHash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) GetMaxBlockHeight(ctx context.Context, in *ReqMaxBlockHeight, opts ...grpc.CallOption) (*ResMaxBlockHeight, error) {
	out := new(ResMaxBlockHeight)
	err := c.cc.Invoke(ctx, "/message.Greeter/GetMaxBlockHeight", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) GetAllFreezeBalance(ctx context.Context, in *ReqBalance, opts ...grpc.CallOption) (*ResBalance, error) {
	out := new(ResBalance)
	err := c.cc.Invoke(ctx, "/message.Greeter/GetAllFreezeBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) GetSingleFreezeBalance(ctx context.Context, in *ReqSignBalance, opts ...grpc.CallOption) (*ResBalance, error) {
	out := new(ResBalance)
	err := c.cc.Invoke(ctx, "/message.Greeter/GetSingleFreezeBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) SendEthSignedRawTransaction(ctx context.Context, in *ReqEthSignTransaction, opts ...grpc.CallOption) (*ResEthSignTransaction, error) {
	out := new(ResEthSignTransaction)
	err := c.cc.Invoke(ctx, "/message.Greeter/SendEthSignedRawTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) CallSmartContract(ctx context.Context, in *ReqCallContract, opts ...grpc.CallOption) (*ResCallContract, error) {
	out := new(ResCallContract)
	err := c.cc.Invoke(ctx, "/message.Greeter/CallSmartContract", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) GetCode(ctx context.Context, in *ReqEvmGetcode, opts ...grpc.CallOption) (*ResEvmGetcode, error) {
	out := new(ResEvmGetcode)
	err := c.cc.Invoke(ctx, "/message.Greeter/GetCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) GetStorageAt(ctx context.Context, in *ReqGetstorage, opts ...grpc.CallOption) (*ResGetstorage, error) {
	out := new(ResGetstorage)
	err := c.cc.Invoke(ctx, "/message.Greeter/GetStorageAt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) GetLogs(ctx context.Context, in *ReqLogs, opts ...grpc.CallOption) (*ResLogs, error) {
	out := new(ResLogs)
	err := c.cc.Invoke(ctx, "/message.Greeter/GetLogs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) GetAvailableBalance(ctx context.Context, in *ReqGetAvailableBalance, opts ...grpc.CallOption) (*ResGetAvailableBalance, error) {
	out := new(ResGetAvailableBalance)
	err := c.cc.Invoke(ctx, "/message.Greeter/GetAvailableBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) GetHasherPerSecond(ctx context.Context, in *ReqHasherPerSecond, opts ...grpc.CallOption) (*ResHasherPerSecond, error) {
	out := new(ResHasherPerSecond)
	err := c.cc.Invoke(ctx, "/message.Greeter/GetHasherPerSecond", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GreeterServer is the server API for Greeter service.
type GreeterServer interface {
	GetBalance(context.Context, *ReqBalance) (*ResBalance, error)
	SendTransaction(context.Context, *ReqTransaction) (*ResTransaction, error)
	SendLockTransaction(context.Context, *ReqTransaction) (*ResTransaction, error)
	SendUnlockTransaction(context.Context, *ReqTransaction) (*ResTransaction, error)
	GetBlockByNum(context.Context, *ReqBlockByNumber) (*RespBlock, error)
	GetTxByHash(context.Context, *ReqTxByHash) (*RespTxByHash, error)
	GetAddressNonceAt(context.Context, *ReqNonce) (*ResposeNonce, error)
	GetBlockByHash(context.Context, *ReqBlockByHash) (*RespBlockDate, error)
	GetMaxBlockHeight(context.Context, *ReqMaxBlockHeight) (*ResMaxBlockHeight, error)
	GetAllFreezeBalance(context.Context, *ReqBalance) (*ResBalance, error)
	GetSingleFreezeBalance(context.Context, *ReqSignBalance) (*ResBalance, error)
	SendEthSignedRawTransaction(context.Context, *ReqEthSignTransaction) (*ResEthSignTransaction, error)
	CallSmartContract(context.Context, *ReqCallContract) (*ResCallContract, error)
	GetCode(context.Context, *ReqEvmGetcode) (*ResEvmGetcode, error)
	GetStorageAt(context.Context, *ReqGetstorage) (*ResGetstorage, error)
	GetLogs(context.Context, *ReqLogs) (*ResLogs, error)
	GetAvailableBalance(context.Context, *ReqGetAvailableBalance) (*ResGetAvailableBalance, error)
	GetHasherPerSecond(context.Context, *ReqHasherPerSecond) (*ResHasherPerSecond, error)
}

// UnimplementedGreeterServer can be embedded to have forward compatible implementations.
type UnimplementedGreeterServer struct {
}

func (*UnimplementedGreeterServer) GetBalance(context.Context, *ReqBalance) (*ResBalance, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBalance not implemented")
}
func (*UnimplementedGreeterServer) SendTransaction(context.Context, *ReqTransaction) (*ResTransaction, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendTransaction not implemented")
}
func (*UnimplementedGreeterServer) SendLockTransaction(context.Context, *ReqTransaction) (*ResTransaction, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendLockTransaction not implemented")
}
func (*UnimplementedGreeterServer) SendUnlockTransaction(context.Context, *ReqTransaction) (*ResTransaction, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendUnlockTransaction not implemented")
}
func (*UnimplementedGreeterServer) GetBlockByNum(context.Context, *ReqBlockByNumber) (*RespBlock, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBlockByNum not implemented")
}
func (*UnimplementedGreeterServer) GetTxByHash(context.Context, *ReqTxByHash) (*RespTxByHash, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTxByHash not implemented")
}
func (*UnimplementedGreeterServer) GetAddressNonceAt(context.Context, *ReqNonce) (*ResposeNonce, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAddressNonceAt not implemented")
}
func (*UnimplementedGreeterServer) GetBlockByHash(context.Context, *ReqBlockByHash) (*RespBlockDate, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBlockByHash not implemented")
}
func (*UnimplementedGreeterServer) GetMaxBlockHeight(context.Context, *ReqMaxBlockHeight) (*ResMaxBlockHeight, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMaxBlockHeight not implemented")
}
func (*UnimplementedGreeterServer) GetAllFreezeBalance(context.Context, *ReqBalance) (*ResBalance, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllFreezeBalance not implemented")
}
func (*UnimplementedGreeterServer) GetSingleFreezeBalance(context.Context, *ReqSignBalance) (*ResBalance, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSingleFreezeBalance not implemented")
}
func (*UnimplementedGreeterServer) SendEthSignedRawTransaction(context.Context, *ReqEthSignTransaction) (*ResEthSignTransaction, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendEthSignedRawTransaction not implemented")
}
func (*UnimplementedGreeterServer) CallSmartContract(context.Context, *ReqCallContract) (*ResCallContract, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CallSmartContract not implemented")
}
func (*UnimplementedGreeterServer) GetCode(context.Context, *ReqEvmGetcode) (*ResEvmGetcode, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCode not implemented")
}
func (*UnimplementedGreeterServer) GetStorageAt(context.Context, *ReqGetstorage) (*ResGetstorage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStorageAt not implemented")
}
func (*UnimplementedGreeterServer) GetLogs(context.Context, *ReqLogs) (*ResLogs, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLogs not implemented")
}
func (*UnimplementedGreeterServer) GetAvailableBalance(context.Context, *ReqGetAvailableBalance) (*ResGetAvailableBalance, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAvailableBalance not implemented")
}
func (*UnimplementedGreeterServer) GetHasherPerSecond(context.Context, *ReqHasherPerSecond) (*ResHasherPerSecond, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHasherPerSecond not implemented")
}

func RegisterGreeterServer(s *grpc.Server, srv GreeterServer) {
	s.RegisterService(&_Greeter_serviceDesc, srv)
}

func _Greeter_GetBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqBalance)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).GetBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/message.Greeter/GetBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).GetBalance(ctx, req.(*ReqBalance))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_SendTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqTransaction)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).SendTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/message.Greeter/SendTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).SendTransaction(ctx, req.(*ReqTransaction))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_SendLockTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqTransaction)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).SendLockTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/message.Greeter/SendLockTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).SendLockTransaction(ctx, req.(*ReqTransaction))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_SendUnlockTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqTransaction)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).SendUnlockTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/message.Greeter/SendUnlockTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).SendUnlockTransaction(ctx, req.(*ReqTransaction))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_GetBlockByNum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqBlockByNumber)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).GetBlockByNum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/message.Greeter/GetBlockByNum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).GetBlockByNum(ctx, req.(*ReqBlockByNumber))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_GetTxByHash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqTxByHash)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).GetTxByHash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/message.Greeter/GetTxByHash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).GetTxByHash(ctx, req.(*ReqTxByHash))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_GetAddressNonceAt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqNonce)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).GetAddressNonceAt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/message.Greeter/GetAddressNonceAt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).GetAddressNonceAt(ctx, req.(*ReqNonce))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_GetBlockByHash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqBlockByHash)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).GetBlockByHash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/message.Greeter/GetBlockByHash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).GetBlockByHash(ctx, req.(*ReqBlockByHash))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_GetMaxBlockHeight_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqMaxBlockHeight)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).GetMaxBlockHeight(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/message.Greeter/GetMaxBlockHeight",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).GetMaxBlockHeight(ctx, req.(*ReqMaxBlockHeight))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_GetAllFreezeBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqBalance)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).GetAllFreezeBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/message.Greeter/GetAllFreezeBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).GetAllFreezeBalance(ctx, req.(*ReqBalance))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_GetSingleFreezeBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqSignBalance)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).GetSingleFreezeBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/message.Greeter/GetSingleFreezeBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).GetSingleFreezeBalance(ctx, req.(*ReqSignBalance))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_SendEthSignedRawTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqEthSignTransaction)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).SendEthSignedRawTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/message.Greeter/SendEthSignedRawTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).SendEthSignedRawTransaction(ctx, req.(*ReqEthSignTransaction))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_CallSmartContract_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCallContract)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).CallSmartContract(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/message.Greeter/CallSmartContract",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).CallSmartContract(ctx, req.(*ReqCallContract))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_GetCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqEvmGetcode)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).GetCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/message.Greeter/GetCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).GetCode(ctx, req.(*ReqEvmGetcode))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_GetStorageAt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGetstorage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).GetStorageAt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/message.Greeter/GetStorageAt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).GetStorageAt(ctx, req.(*ReqGetstorage))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_GetLogs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqLogs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).GetLogs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/message.Greeter/GetLogs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).GetLogs(ctx, req.(*ReqLogs))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_GetAvailableBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGetAvailableBalance)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).GetAvailableBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/message.Greeter/GetAvailableBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).GetAvailableBalance(ctx, req.(*ReqGetAvailableBalance))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_GetHasherPerSecond_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqHasherPerSecond)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).GetHasherPerSecond(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/message.Greeter/GetHasherPerSecond",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).GetHasherPerSecond(ctx, req.(*ReqHasherPerSecond))
	}
	return interceptor(ctx, in, info, handler)
}

var _Greeter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "message.Greeter",
	HandlerType: (*GreeterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBalance",
			Handler:    _Greeter_GetBalance_Handler,
		},
		{
			MethodName: "SendTransaction",
			Handler:    _Greeter_SendTransaction_Handler,
		},
		{
			MethodName: "SendLockTransaction",
			Handler:    _Greeter_SendLockTransaction_Handler,
		},
		{
			MethodName: "SendUnlockTransaction",
			Handler:    _Greeter_SendUnlockTransaction_Handler,
		},
		{
			MethodName: "GetBlockByNum",
			Handler:    _Greeter_GetBlockByNum_Handler,
		},
		{
			MethodName: "GetTxByHash",
			Handler:    _Greeter_GetTxByHash_Handler,
		},
		{
			MethodName: "GetAddressNonceAt",
			Handler:    _Greeter_GetAddressNonceAt_Handler,
		},
		{
			MethodName: "GetBlockByHash",
			Handler:    _Greeter_GetBlockByHash_Handler,
		},
		{
			MethodName: "GetMaxBlockHeight",
			Handler:    _Greeter_GetMaxBlockHeight_Handler,
		},
		{
			MethodName: "GetAllFreezeBalance",
			Handler:    _Greeter_GetAllFreezeBalance_Handler,
		},
		{
			MethodName: "GetSingleFreezeBalance",
			Handler:    _Greeter_GetSingleFreezeBalance_Handler,
		},
		{
			MethodName: "SendEthSignedRawTransaction",
			Handler:    _Greeter_SendEthSignedRawTransaction_Handler,
		},
		{
			MethodName: "CallSmartContract",
			Handler:    _Greeter_CallSmartContract_Handler,
		},
		{
			MethodName: "GetCode",
			Handler:    _Greeter_GetCode_Handler,
		},
		{
			MethodName: "GetStorageAt",
			Handler:    _Greeter_GetStorageAt_Handler,
		},
		{
			MethodName: "GetLogs",
			Handler:    _Greeter_GetLogs_Handler,
		},
		{
			MethodName: "GetAvailableBalance",
			Handler:    _Greeter_GetAvailableBalance_Handler,
		},
		{
			MethodName: "GetHasherPerSecond",
			Handler:    _Greeter_GetHasherPerSecond_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "message.proto",
}
